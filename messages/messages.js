const { 
  dateAndTimeNow, 
  timeToMidnight, 
  timeToNextThursday,
  timeToNextThursdayNineAm, 
  millisToDate, 
  daysUntil
} = require('../utils/timedateUtils')
const { getChuckNorrisJoke } = require('../chucknorris')


const sendMessageToGivenChannel = (client, channelName, message) => {

  const guild = client.guilds.cache.first()

  if (!guild)
    return console.error('No guilds found.')

  const channel = guild.channels.cache.find(channel => channel.name === channelName)

  if (!channel)
    return console.error('No channel found.')

  channel.send(message)
    .then(() => console.log(`Message sent to ${channel.name}!`))
    .catch(console.error)
}

const replies = (message) => {

  if (message.author.bot)
    return 

  if (message.content === 'ping') {
    message.reply('Pong!')
  }

  if (message.content.toLowerCase() === 'p√§iv√§√§' || message.content.toLowerCase() === 'p√§iv√§√§!') {
    message.reply(`P√ÑIV√Ñ√Ñ!!!ü§òüòéü§ò`)
  }

  if (message.content.toLowerCase().startsWith('hdt') || message.content.toLowerCase().includes('hdt')) {

    daysUntil(timeToNextThursday()) != 0 
      ? message.reply(`${message.author} EI OLE VIEL√Ñ HDT! HDT on ${returnDayRelativeToNextThursday()}! üåû`)
      : message.reply(`Hyv√§√§ Discord Torstaita ${message.author}! ü•≥`)
  }
}

const commands = (client, message) => {

  if (message.author.bot)
    return 

  if (message.content.startsWith('!aika')) {
    message.reply(dateAndTimeNow())
  }

  if (message.content.startsWith('!hdt')) {

    daysUntil(timeToNextThursday()) != 0
      ? message.reply(`HDT on ${returnDayRelativeToNextThursday()} (${daysUntil(timeToNextThursday())} p√§iv√§√§)! üåû`)
      : message.reply(`HDT on ${returnDayRelativeToNextThursday()}! Hyv√§√§ Discord Torstaita rakkaat yst√§v√§t!üåûüåûüåû`)    
  }

  if (message.content.startsWith('!m√∂kki')) {
    sendMessageToGivenChannel(client, 'yleinen-paskan-l√§tin√§', 'Jaa m√∂kille')
  }

  if (message.content.startsWith('!bot')) {
    message.reply(botCommandsString())
  }

  if (message.content.toLowerCase().includes('m√∂kille') || message.content.toLowerCase().includes('m√∂kill√§')) {
    sendMessageToGivenChannel(client, 'yleinen-paskan-l√§tin√§', 'Jaa m√∂kille')
  }

  if (message.content.startsWith('!chuck')) {
    getChuckNorrisJoke()
      .then(joke => message.reply(joke))
  }

}

const channelMessages = (client, message) => {

  // TODO: tulee sit ku tulee

}

const setTimedMessages = (client) => {
  
  const midnight = timeToMidnight()

  // Send a message when the day changes
  setTimeout(() => {
    sendMessageToGivenChannel(client, 'yleinen-paskan-l√§tin√§', dateAndTimeNow())
    console.log('Day changed!')
    console.log(`Interval to midnight: ${midnight} milliseconds`)
  }, midnight)
}  

const setHappyHdtGreeting = (client) => {
  
  const nextThursday = timeToNextThursdayNineAm()

  // Send a message when the day changes to thursday and it's 9 o'clock in the morning
  setTimeout(() => {
    sendMessageToGivenChannel(client, 'yleinen-paskan-l√§tin√§', 'Hyv√§√§ HDT:ta ihmisveljet! ü•≥ü•≥ü•≥')
    console.log('HDT happened!')
    console.log(`Interval to next thursday: ${nextThursday} milliseconds`)
  }, nextThursday)
}

module.exports = { 
  sendMessageToGivenChannel,
  replies,
  channelMessages,
  commands,
  setTimedMessages,
  setHappyHdtGreeting,
}

function returnDayRelativeToNextThursday() {
  const daysUntilHdt = [
    {
      day: 'yliyliyliyliylihuomenna',
      date: daysUntil(timeToNextThursday()) === 6
    },
    {
      day: 'yliyliyliylihuomenna',
      date: daysUntil(timeToNextThursday()) === 5
    },
    {
      day: 'yliyliylihuomenna',
      date: daysUntil(timeToNextThursday()) === 4
    },
    {
      day: 'yliylihuomenna',
      date: daysUntil(timeToNextThursday()) === 3
    },
    {
      day: 'ylihuomenna',
      date: daysUntil(timeToNextThursday()) === 2
    },
    {
      day: 'huomenna',
      date: daysUntil(timeToNextThursday()) === 1
    },
    {
      day: 't√§n√§√§n',
      date: daysUntil(timeToNextThursday()) === 0
    },
  ]

  const relativeDay = daysUntilHdt.filter(day => day.date)

  return relativeDay[0].day
}

const botCommandsString = () => {

  return 'N√§√§ komennot nyt ainaski l√∂ytyy:\n' + 
    '- !aika - Mik√§ p√§iv√§ ja paljon kello\n' + 
    '- !hdt - Montako p√§iv√§√§ torstaihin\n' + 
    '- !m√∂kki - Jaa m√∂kille..\n' + 
    '- !bot - Botin komennot\n' + 
    '- !chuck - Random Chuck Norris Vizi üåû\n\n' + 
    'Tulossa EHK√Ñ:\n' + 
    '- Spotify playlist ultimate automatic collector\n' + 
    '- Old Lemoon Pitsu/kebub-tilaush√§zz√§kk√§\n\n' +
    'ETSIT√Ñ√ÑN BACKEND DEVAAJA PR0TA TEKEM√Ñ√ÑN JOKU SIMPPELI EXPRESS.JS BACKENDI T√ÑH√ÑN BOTTIIN ü•≥üòé'
}